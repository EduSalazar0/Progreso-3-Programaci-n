#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_ESTUDIANTES 5

typedef struct {
    int codigo;
    char nombre[50];
    char carrera[50];
    float nota1;
    float nota2;
    float nota3;
    float promedio;
} Estudiante;

void ordenarEstudiantes(Estudiante estudiantes[], int numEstudiantes);
void imprimirEstudiantes(Estudiante estudiantes[], int numEstudiantes);

int main() {
    FILE *archivoEntrada, *archivoSalida;
    char linea[100];
    Estudiante estudiantes[MAX_ESTUDIANTES];
    int numEstudiantes = 0;

    archivoEntrada = fopen("alumnos.txt", "r");
    if (archivoEntrada == NULL) {
        printf("No se pudo abrir el archivo de entrada.\n");
        return 1;
    }
    else{
        printf("El archivo se pudo abrir correctamente\n");
    }

    while (fgets(linea, sizeof(linea), archivoEntrada) != NULL) { // bucle While para scanear 
        Estudiante estudiante;
        sscanf(linea, "%d;%[^;];%[^;];%f;%f;%f", &estudiante.codigo, estudiante.nombre, estudiante.carrera, &estudiante.nota1, &estudiante.nota2, &estudiante.nota3);

        // Cálculo del promedio
        estudiante.promedio = (estudiante.nota1 + estudiante.nota2 + estudiante.nota3) / 3.0;

        estudiantes[numEstudiantes] = estudiante;
        numEstudiantes++;
    }

    fclose(archivoEntrada); // Cierro el puntero entrada

    ordenarEstudiantes(estudiantes, numEstudiantes); // LLamo a la funcion ordenar estudiantes.

    archivoSalida = fopen("alumnos_ordenados.txt", "w"); // Definicon de fopen a puntero y pido que se abra para escritura.
    if (archivoSalida == NULL) {
        printf("No se pudo abrir el archivo de salida.\n");
        return 1;
    }

    for (int i = 0; i < numEstudiantes; i++) { // Bucle for para impirmir todos los estudiantes.
        fprintf(archivoSalida, "%d;%s;%s;%.2f;%.2f;%.2f;%.2f\n", estudiantes[i].codigo, estudiantes[i].nombre, estudiantes[i].carrera, estudiantes[i].nota1, estudiantes[i].nota2, estudiantes[i].nota3, estudiantes[i].promedio);
    }

    fclose(archivoSalida); // Cierre de puntero archivo salida.

    return 0;
}
//funcion para Ordenar los estudiantes de manera ascendente.
//Lo que hago es definir variables i y j como iteradores encargadas de hacer funcionar el ciclo for, declarado una variable temp de tipo estudiante lo que hago es almacenar los datos.
void ordenarEstudiantes(Estudiante estudiantes[], int numEstudiantes) {
    for (int i = 0; i < numEstudiantes - 1; i++) {
        for (int j = i + 1; j < numEstudiantes; j++) {
            if (estudiantes[i].codigo < estudiantes[j].codigo) {
                Estudiante temp = estudiantes[i];
                estudiantes[i] = estudiantes[j];
                estudiantes[j] = temp;
            }
        }
    }
}
//Definicion para impirmir estudiantes.
void imprimirEstudiantes(Estudiante estudiantes[], int numEstudiantes) {
    printf("Código\tNombre\t\tCarrera\t\tNota 1\tNota 2\tNota 3\tPromedio\n");
    for (int i = 0; i < numEstudiantes; i++) {
        printf("%d\t%s\t%s\t%.2f\t%.2f\t%.2f\t%.2f\n", estudiantes[i].codigo, estudiantes[i].nombre, estudiantes[i].carrera, estudiantes[i].nota1, estudiantes[i].nota2, estudiantes[i].nota3, estudiantes[i].promedio);
    }
}
